                                                                                              

org 100h

.data

F db 0
num1 db 0
num2 db 0
op db 0
result db 0
count db 0
msg db 0dh,0ah,"Error"


.code
mov ax,@data
mov ds,ax


LL1:
call get1        ;we get first number
cmp ax,0
je print
cmp F,0     
je LL1  

LL2:
call get2      ;we get second number
cmp ax,0
je print
cmp F,1
je LL2


Solve: 

cmp op,'+'
je addition  
cmp op,'-'
je subtraction
cmp op,'*'
je multiplication 
cmp op, '/'
je divison 

addition:
mov bl, num1
add bl,num2
mov result,bl
jmp done

subtraction:        
mov bl, num1
sub bl,num2
mov result,bl
jmp done    
            
multiplication: 
mov bl,0     ;zero out accumlator
mov cl, num1  
mov ch, 0
ML1: 
add bl,num2
mov result,bl 
loop ML1
jmp done
 

divison:          
mov al, num2 
cmp num1, al ;keep dividing (infinte loop) until num2 bigger than num1
jb done
sub num1, al
inc result
jmp divison   
          



print:

mov cx,7
mov si,0
screen:
mov dl,msg[si]
mov ah,2
int 21h
inc si
loop screen


done:
ret


get1 proc
     
    mov ah,1
    int 21h
        
    cmp al,'+'
    je L4 
    cmp al,'-'
    je L5   
    cmp al, '*'
    je L6
    cmp al, '/'   
    je L7
    
    sub al,30h
    
    cmp al,0
    jb L2
    cmp al,9
    ja L2
    
    mov cx,10
    mov bh,0
    L3:
    add bh,num1
    loop L3
    add bh,al
    mov num1,bh
    ret 
    
    L4:
    mov op,'+'
    mov F,1
    ret
    L5:
    mov op,'-'
    mov F,1
    ret  
    L6:
    mov op, '*'
    mov F, 1  
    ret
    L7:
    mov op, '/'
    mov F, 1 
    ret
    L2:
    mov ax,0
       
    ret
    endp

get2 proc
     
    mov ah,1
    int 21h
        
    cmp al,'='
    je L41 
    
    
    sub al,30h
    
    cmp al,0
    jb L21
    cmp al,9
    ja L21
                
    mov cx,10
    mov bh,0
    L31:
    add bh,num2
    loop L31
    add bh,al
    mov num2,bh
    ret 
    
    L41:
    mov F,2
    ret
    
    L21:
    mov ax,0
       
    ret
    endp
